git config --global user.name username => (provide username to git)
git config --global user.name => (check username provided to git)
git config --global user.email email => (provide user email to git)
git config --global user.email => (check email provided to git)
git status => (check status of our files)
git add filename => (to add/stage new/modified file)
git add -A => (to add/stage all new/modified files together)
git commit -m "type any message here" => (to commit all the changes in all files)
git stash => (archive all the staged,unstaged,uncommited changes in stash)
git stash pop => (unarchive all the changes which were archived in stash)
git stash clear => (delete all the archived changes form stash)
git checkout filename=> (revert the file changes to last commit)
git checkout -f=> (revert all the files changes to last commit)
git log => (give the list of all the commits)
git log -p -(no. of commits you want to see) => (give the list of commits & changes (press Q to quit git command)) e.g. git log -p -2 will give info about last 2 commits
git reset hashid => (removes all the commits above given git hashid)
git diff => (comapares staging area(red) and current working directory(green), it becomes easy to track the changes)
git diff --staged => (compares our staging area with last commited directory)
git commit -a -m "type message here" => (stages and commits all the modified files at once (note: add the new file first))
git rm --cached filename => (removes file from staging area without commiting)
git rm => (delete file from everywhere without commiting)
git status -s => (tells the modified status of files in staging area and working directory)
git branch branchname => (to create new branch of directory)
git branch => (list of branches)
git checkout branchname => (switch to different branches)
git merge branchname => (merge branchname branch to current branch you are in)